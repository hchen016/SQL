-- For this project, I downloaded a Spotify data from Kraggle.
--then created a table to insert the data into. 
-- Finally, I performed analytics on the data table using SQL.
--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);


--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--Then I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

-- Next I created a CTE or common table expressions by calculating the average popularity of the artist in the spotify data table.
-- To the CTE I added all artists with a average popularity above 90. 
WITH avg_pop_CTE AS (
SELECT s.artist_name, AVG(s.popularity) AS average_popularity FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name, average_popularity, 'Top Star' AS tag FROM avg_pop_CTE
WHERE average_popularity>=90
ORDER BY average_popularity DESC; 

